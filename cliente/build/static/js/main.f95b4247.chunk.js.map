{"version":3,"sources":["context/Alertas/alertaContext.js","context/Autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/Proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/Tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/Proyectos/proyectoReducer.js","config/axios.js","context/Proyectos/ProyectoState.js","context/Tareas/tareaReducer.js","context/Tareas/tareaState.js","context/Alertas/alertaReducer.js","context/Alertas/alertaState.js","context/Autenticacion/authReducer.js","config/token.js","context/Autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","AuthContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","setUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","mostrarFormulario","agregarProyecto","errorFormulario","mostrarError","proyecto","setProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","errortarea","agregarTarea","validarTarea","tareaseleccionada","actualizarTarea","limpiarTarea","setTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","CambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","proyectoReducer","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","tareaReducer","TareaState","TareaReducer","params","tareas","console","log","put","alertaReducer","AlertaState","setTimeout","authReducer","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95b4247.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import { createContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;","import React, { useState, useContext, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/Alertas/alertaContext';\nimport AuthContext from '../../context/Autenticacion/authContext';\n\nconst Login = (props) => {\n\n\n    // Extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n\n    // En caso de que el password o usuario no exista\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos')\n        }\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    // state para iniciar sesion\n    const [usuario, setUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // extraer de usuario\n    const { email, password } = usuario;\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // cuando el usuario quiere iniciar sesion\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar que no haya campos vacios\n        if (email.trim() === \"\" || password.trim() === \"\") {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        // pasarlo al action\n        iniciarSesion({ email, password });\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            { alerta\n                ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\n                : null\n            }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>iniciar Sesion</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            placeholder=\"Tu Email\"\n                            onChange={onChange}\n                            value={email}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            placeholder=\"Tu Password\"\n                            onChange={onChange}\n                            value={password}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesion\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">Obtener cuenta</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/Alertas/alertaContext';\nimport AuthContext from '../../context/Autenticacion/authContext';\n\nconst NuevaCuenta = (props) => {\n\n    // Extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, registrarUsuario } = authContext;\n\n    // En caso de que lel usuario se haya autenticado o registrado o sea un registro\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos')\n        }\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria); \n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado,props.history])\n\n    // state para iniciar sesion\n    const [usuario, setUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    // extraer de usuario\n    const { nombre, email, password, confirmar } = usuario;\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // cuando el usuario quiere iniciar sesion\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar que no haya campos vacios\n        if (\n            nombre.trim() === '' ||\n            email.trim() === '' ||\n            password.trim() === '' ||\n            confirmar.trim() === ''\n        ) {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        }\n\n        // password minimo de 6 caracteres\n        if (password.length < 6) {\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        // Los 2 passwords son iguales\n        if (password !== confirmar) {\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n            return;\n        }\n\n        // pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password\n        })\n        \n    }\n\n    return (\n        <div className=\"form-usuario\">\n                { alerta\n                    ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\n                    : null\n                }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener una cuenta</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Nombre</label>\n                        <input\n                            type=\"text\"\n                            name=\"nombre\"\n                            id=\"nombre\"\n                            placeholder=\"Tu Nombre\"\n                            onChange={onChange}\n                            value={nombre}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            placeholder=\"Tu Email\"\n                            onChange={onChange}\n                            value={email}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            placeholder=\"Tu Password\"\n                            onChange={onChange}\n                            value={password}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar tu password</label>\n                        <input\n                            type=\"password\"\n                            name=\"confirmar\"\n                            id=\"confirmar\"\n                            placeholder=\"Repite tu password\"\n                            onChange={onChange}\n                            value={confirmar}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Registrarme\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/'} className=\"enlace-cuenta\">Volver a iniciar sesion</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default NuevaCuenta;","import {createContext} from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // obtener el state del formulario\n\n    const proyectosContext = useContext(proyectoContext);\n    const { \n            formulario, \n            mostrarFormulario , \n            agregarProyecto , \n            errorFormulario , \n            mostrarError\n        } = proyectosContext;\n\n    // state para proyecto\n    const [proyecto, setProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre del proyecto\n    const { nombre } = proyecto;\n\n\n    // lee los contenidos del input\n    const onChangeProyecto = e => {\n        setProyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // cuando el usuario envia un proyecto\n\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        // validar el proyecto\n\n        if(nombre === ''){\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        agregarProyecto(proyecto);\n        \n        // Reiniciar el form\n        setProyecto({\n            nombre:''\n        })\n    }\n\n    // mostrar el formulario\n\n    const onClickFormulario = () =>{\n        mostrarFormulario();\n    }\n\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={onClickFormulario}\n            >\n                Nuevo Proyecto\n        </button>\n\n            {\n                formulario\n                    ?\n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input\n                                type=\"text\"\n                                className=\"input-text\"\n                                name=\"nombre\"\n                                placeholder=\"Nombre proyecto\"\n                                onChange={onChangeProyecto}\n                                value={nombre}\n                            />\n\n                            <input\n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Proyecto\"\n                            />\n                        </form>\n                    )\n                    :\n                    null\n            }\n\n            { errorFormulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>: null}\n        </Fragment>\n    );\n}\n\nexport default NuevoProyecto;","import  { createContext } from 'react'\n\nconst tareaContext = createContext();\n\nexport default tareaContext;\n\n","import React, { useContext } from 'react';\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\nimport tareaContext from '../../context/Tareas/tareaContext';\n\n\nconst Proyecto = ({ proyecto }) => {\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    // obtener la funcion del context de tarea\n\n    const tareasContext = useContext(tareaContext);\n    const { obtenerTareas } = tareasContext;\n\n    // funcion para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        proyectoActual(id); //Fijar un proyecto actual\n        obtenerTareas(id); // filtrar las tareas cuando se den click\n\n    }\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={() => seleccionarProyecto(proyecto._id)}\n            >{proyecto.nombre}</button>\n        </li>\n    );\n}\n\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto'\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\nimport AlertaContext from '../../context/Alertas/alertaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ListadoProyectos = () => {\n\n    // Extraer proyectos del state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    // obtener proyectos cuando se carga el componente\n    useEffect(() => {\n        // si hay un errror\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n    // revisar si proyectos tiene contenido\n    if (proyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>;\n\n    return (\n        <ul className=\"listado-proyectos\">\n            {alerta\n                ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\n                : null\n            }\n            <TransitionGroup>\n                {proyectos.map(proyecto => (\n                    <CSSTransition\n                        key={proyecto._id}\n                        timeout={200}\n                        classNames=\"proyecto\"\n                    >\n                        <Proyecto\n\n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </ul>\n    );\n}\n\nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\nimport ListadoProyectos from '../proyectos/ListadoProyectos'\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN <span>Taks</span></h1>\n            <NuevoProyecto/>\n\n            <div className=\"proyectos\">\n\n                <h2>tus Proyectos</h2>\n                <ListadoProyectos/>\n                \n            </div>\n\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\nimport AuthContext from '../../context/Autenticacion/authContext';\n\nconst Barra = () => {\n\n    // Extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <header className=\"app-header\">\n            {usuario\n                ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p>\n                : null\n            }\n\n\n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={() => cerrarSesion()}\n                >\n                    Cerrar sesion\n                </button>\n            </nav>\n        </header>\n    );\n}\n\nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\nimport tareaContext from '../../context/Tareas/tareaContext';\n\nconst FormTarea = () => {\n\n\n\n    // Extraer proyectos del state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    const tareasContext = useContext(tareaContext);\n    const { errortarea, agregarTarea, validarTarea, obtenerTareas, tareaseleccionada, actualizarTarea , limpiarTarea } = tareasContext;\n\n    // Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if (tareaseleccionada !== null) {\n            setTarea(tareaseleccionada);\n        } else {\n            setTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaseleccionada])\n\n    // state del formulario \n    const [tarea, setTarea] = useState({\n        nombre: ''\n    })\n\n    // extraer el nombre del proyecto\n    const { nombre } = tarea\n\n    // Si no hay proyecto seleccionado\n\n    if (!proyecto) return null;\n\n    const [proyectoActual] = proyecto;\n\n    // leer los valores del formulario\n\n    const handleChange = e => {\n        setTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n\n        // Validar \n        if (nombre.trim() === '') {\n            validarTarea();\n            return;\n        }\n\n        // Revisar si es edicion o si es nueva tarea\n        if (tareaseleccionada === null) {\n            //tarea nueva\n            // agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            // Actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tarea seleccionada del state\n            limpiarTarea();\n        }\n\n        // Obtener y filtrar las tareas del proyectoabtual\n        obtenerTareas(proyectoActual.id);\n\n        // reiniciar el form\n        setTarea({\n            nombre: ''\n        })\n    }\n\n\n    return (\n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        name=\"nombre\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar tarea'}\n                    />\n                </div>\n            </form>\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n    );\n}\n\nexport default FormTarea;","import React, { useContext } from 'react';\nimport tareaContext from '../../context/Tareas/tareaContext';\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\n\nconst Tarea = ({ tarea }) => {\n\n    const tareasContext = useContext(tareaContext);\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // Extraer el proyecto\n    const [proyectoActual] = proyecto;\n\n    // Funcion que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual.id);\n    }\n\n    // funcion que modifica el estado de las tareas\n    const CambiarEstado = tarea => {\n        if (tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n\n    // agrega una tarea actual cuando el usuario desea editarla\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n            <div className=\"estado\">\n                {\n                    tarea.estado\n                        ?\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => CambiarEstado(tarea)}\n                        >Completo</button>\n                        :\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => CambiarEstado(tarea)}\n                        >Incompleto</button>\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea)}\n                >Editar</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n    );\n}\n\nexport default Tarea;","import React, { Fragment, useContext } from 'react';\nimport Tarea from '../tareas/Tarea'\nimport proyectoContext from '../../context/Proyectos/proyectoContext';\nimport tareaContext from '../../context/Tareas/tareaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst ListadoTareas = () => {\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto } = proyectosContext;\n\n    // obtener las tareas del proyecto  \n    const tareasContext = useContext(tareaContext);\n    const { tareasproyecto } = tareasContext;\n\n\n    // Si no hay proyecto seleccionado\n\n    if (!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n    // Array destructuring para extraer el proyecto actual\n\n    const [proyectoActual] = proyecto;\n\n    // Elimina el proyecto\n\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id)\n    }\n    return (\n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n\n            <ul className=\"listado-tareas\">\n                {\n                    tareasproyecto.length === 0\n                        ?\n                        (\n                            <li className=\"tarea\"><p>No hay tareas</p></li>\n                        )\n                        :\n                        <TransitionGroup>\n                            {\n                                tareasproyecto.map(tarea => (\n                                    <CSSTransition\n                                        key={tarea.id}\n                                        timeout={200}\n                                        classNames=\"tarea\"\n                                    >\n                                        <Tarea\n                                            \n                                            tarea={tarea}\n                                        />\n                                    </CSSTransition>\n                                ))\n                            }\n                        </TransitionGroup>\n\n                }\n            </ul>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n    );\n}\n\nexport default ListadoTareas;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar'\nimport Barra from '../layout/Barra'\nimport FormTarea from '../tareas/FormTarea'\nimport ListadoTareas from '../tareas/ListadoTareas'\nimport AuthContext from '../../context/Autenticacion/authContext';\n\nconst Proyectos = () => {\n\n    // Extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n                <Barra />\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR'\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n\n\n\n","import { \n    AGREGAR_PROYECTO, \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS, \n    VALIDAR_FORMULARIO, \n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    PROYECTO_ERROR\n} from '../../types'\n\nconst proyectoReducer = (state, action) => {\n    switch (action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorFormulario : false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorFormulario : true\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\n            }\n        case ELIMINAR_PROYECTO : \n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto:null\n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje:action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default proyectoReducer;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    PROYECTO_ERROR\n} from '../../types'\n\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos: [],\n        formulario: false,\n        errorFormulario: false,\n        proyecto: null,\n        mensaje: null,\n\n    }\n\n    // Dispatch para ejecutar las acciones\n\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    // serie de funciones para el CRUD\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    // obtener los proyectos con dispatch\n\n    const obtenerProyectos = async () => {\n        try {\n\n            const resultado = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // agregar nuevo proyecto\n\n    const agregarProyecto = async proyecto => {\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n\n            // insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Validar el formulario por errores\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO,\n\n        })\n    }\n\n    // selecciona el proyecto que el usuario dio click\n\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    // Elimina un proyecto\n\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            });\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyecto: state.proyecto,\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorFormulario: state.errorFormulario,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;","import {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types/index';\n\nconst tareaReducer =  (state, action) => {\n    switch (action.type) {\n        case TAREAS_PROYECTO:\n            return {\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false\n            }\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true\n            }\n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\n            }\n        case ACTUALIZAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\n            }\n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return {\n                ...state,\n                tareaseleccionada : null\n            }\n        \n\n        default:\n            return state\n    }\n}\n\nexport default tareaReducer;","import React, { useReducer } from 'react'\nimport TareaContext from './tareaContext'\nimport TareaReducer from './tareaReducer'\nimport clienteAxios from '../../config/axios'\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types/index'\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    // crear dispacher y state\n\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    // crear las funciones\n\n    // obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto } });\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    // Agregar una tarea al proyecto seleccionado\n\n    const agregarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            console.log(resultado);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Valida y muestra un error en caso de que sea necesario\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto } });\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Edita o modifica una tarea\n    const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //  Extrae una tarea para edicion\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n\n\n    // Elimina la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    );\n}\n\nexport default TareaState;\n\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\n\nconst alertaReducer =  (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default alertaReducer;","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\n\nconst AlertaState = props => {\n\n    const initialState = {\n        alerta : null\n    }\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg, categoria\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    );\n}\n\nexport default AlertaState;\n","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from \"../../types\";\n\nconst authReducer = (state, action) => {\n    switch (action.type) {\n        case LOGIN_EXITOSO:\n        case REGISTRO_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from \"../../types\";\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando:true\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    // las Funciones\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            console.log(respuesta.data);\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            //console.log(error.response.data.msg);\n\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            tokenAuth(token);\n        }\n\n        try {\n\n            const respuesta = await clienteAxios.get('/api/auth');\n            console.log(respuesta);\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n\n\n\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n\n    // cuando el usuario inicia sesion\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            });\n        }\n    }\n\n    // Cierra la sesion del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        });\n    }\n\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n\n}\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/Autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando,  usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n\n    return (\n        <Route\n            {...props}\n            render={props => !autenticado && !cargando\n                ? (\n                    <Redirect to=\"/\" />\n                )\n                : (\n                    <Component {...props} />\n                )\n            }\n\n        />\n    );\n}\n\nexport default RutaPrivada;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport ProyectoState from './context/Proyectos/ProyectoState';\nimport TareaState from './context/Tareas/tareaState';\nimport AlertaState from './context/Alertas/alertaState';\nimport AuthState from './context/Autenticacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif (token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n\n\n\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}